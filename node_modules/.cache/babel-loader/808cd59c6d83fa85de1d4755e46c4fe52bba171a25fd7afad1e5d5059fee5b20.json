{"ast":null,"code":"var _jsxFileName = \"D:\\\\SHEFALI_FREELANCE\\\\taskManagement\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TaskForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  addTask,\n  updateTask,\n  currentTask,\n  setCurrentTask,\n  isEditing,\n  setIsEditing,\n  setIsModalOpen\n}) {\n  _s();\n  const [task, setTask] = useState({\n    title: '',\n    description: ''\n  });\n  useEffect(() => {\n    if (isEditing) {\n      setTask(currentTask);\n    } else {\n      // setTask({ title: '', description: '' });\n    }\n  }, [isEditing, currentTask]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTask({\n      ...task,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!task.title.trim()) {\n      // Task title is empty, handle error (e.g., display an alert)\n      alert(\"Please enter a task title.\");\n      return; // Stop further execution\n    }\n    if (isEditing) {\n      updateTask(task);\n    } else {\n      addTask(task);\n    }\n    setTask({\n      title: '',\n      description: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"taskForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Title\",\n      value: task.title,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      placeholder: \"Description\",\n      value: task.description,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: isEditing ? 'Update Task' : 'Add Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIsEditing(false);\n        setIsModalOpen(false);\n      },\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"5+0uJymJJW6K4oGRfzfL77Zo1k0=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskForm","addTask","updateTask","currentTask","setCurrentTask","isEditing","setIsEditing","setIsModalOpen","_s","task","setTask","title","description","handleChange","e","name","value","target","handleSubmit","preventDefault","trim","alert","onSubmit","className","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/SHEFALI_FREELANCE/taskManagement/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TaskForm.css'\r\nfunction TaskForm({ addTask, updateTask, currentTask, setCurrentTask, isEditing, setIsEditing, setIsModalOpen }) {\r\n  const [task, setTask] = useState({ title: '', description: '' });\r\n\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      setTask(currentTask);\r\n    } else {\r\n      // setTask({ title: '', description: '' });\r\n    }\r\n  }, [isEditing, currentTask]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTask({ ...task, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!task.title.trim()) {\r\n      // Task title is empty, handle error (e.g., display an alert)\r\n      alert(\"Please enter a task title.\");\r\n      return; // Stop further execution\r\n    }\r\n\r\n    if (isEditing) {\r\n      updateTask(task);\r\n    } else {\r\n      addTask(task);\r\n    }\r\n    setTask({ title: '', description: '' });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className='taskForm'>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"Title\"\r\n        value={task.title}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <textarea\r\n        name=\"description\"\r\n        placeholder=\"Description\"\r\n        value={task.description}\r\n        onChange={handleChange}\r\n        required\r\n      ></textarea>\r\n      <button type=\"submit\">{isEditing ? 'Update Task' : 'Add Task'}</button>\r\n      {isEditing && <button onClick={() => { setIsEditing(false); setIsModalOpen(false) }}>Cancel</button>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvB,SAASC,QAAQA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC,WAAW;EAAEC,cAAc;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC/G,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC;IAAEe,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EAEhEf,SAAS,CAAC,MAAM;IACd,IAAIQ,SAAS,EAAE;MACbK,OAAO,CAACP,WAAW,CAAC;IACtB,CAAC,MAAM;MACL;IAAA;EAEJ,CAAC,EAAE,CAACE,SAAS,EAAEF,WAAW,CAAC,CAAC;EAE5B,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EACrC,CAAC;EAED,MAAME,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI,CAACV,IAAI,CAACE,KAAK,CAACS,IAAI,CAAC,CAAC,EAAE;MACtB;MACAC,KAAK,CAAC,4BAA4B,CAAC;MACnC,OAAO,CAAC;IACV;IAEA,IAAIhB,SAAS,EAAE;MACbH,UAAU,CAACO,IAAI,CAAC;IAClB,CAAC,MAAM;MACLR,OAAO,CAACQ,IAAI,CAAC;IACf;IACAC,OAAO,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAG,CAAC,CAAC;EACzC,CAAC;EACD,oBACEb,OAAA;IAAMuB,QAAQ,EAAEJ,YAAa;IAACK,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAChDzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXV,IAAI,EAAC,OAAO;MACZW,WAAW,EAAC,OAAO;MACnBV,KAAK,EAAEP,IAAI,CAACE,KAAM;MAClBgB,QAAQ,EAAEd,YAAa;MACvBe,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFjC,OAAA;MACEgB,IAAI,EAAC,aAAa;MAClBW,WAAW,EAAC,aAAa;MACzBV,KAAK,EAAEP,IAAI,CAACG,WAAY;MACxBe,QAAQ,EAAEd,YAAa;MACvBe,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACZjC,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAEnB,SAAS,GAAG,aAAa,GAAG;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EACtE3B,SAAS,iBAAIN,OAAA;MAAQkC,OAAO,EAAEA,CAAA,KAAM;QAAE3B,YAAY,CAAC,KAAK,CAAC;QAAEC,cAAc,CAAC,KAAK,CAAC;MAAC,CAAE;MAAAiB,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChG,CAAC;AAEX;AAACxB,EAAA,CApDQR,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAsDjB,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}