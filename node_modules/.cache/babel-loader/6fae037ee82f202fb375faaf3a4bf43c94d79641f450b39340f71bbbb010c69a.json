{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./TaskForm.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TaskForm(_ref){let{addTask,updateTask,currentTask,setCurrentTask,isEditing,setIsEditing,setIsModalOpen}=_ref;const[task,setTask]=useState({title:'',description:''});useEffect(()=>{if(isEditing){setTask(currentTask);}else{// setTask({ title: '', description: '' });\n}},[isEditing,currentTask]);const handleChange=e=>{const{name,value}=e.target;setTask({...task,[name]:value});};const handleSubmit=e=>{e.preventDefault();if(!task.title.trim()){// Task title is empty, handle error (e.g., display an alert)\nalert(\"Please enter a task title.\");return;// Stop further execution\n}if(isEditing){updateTask(task);}else{addTask(task);}setTask({title:'',description:''});};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"taskForm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",placeholder:\"Title\",value:task.title,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",placeholder:\"Description\",value:task.description,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:isEditing?'Update Task':'Add Task'}),isEditing&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setIsEditing(false);setIsModalOpen(false);},children:\"Cancel\"})]});}export default TaskForm;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","TaskForm","_ref","addTask","updateTask","currentTask","setCurrentTask","isEditing","setIsEditing","setIsModalOpen","task","setTask","title","description","handleChange","e","name","value","target","handleSubmit","preventDefault","trim","alert","onSubmit","className","children","type","placeholder","onChange","required","onClick"],"sources":["D:/SHEFALI_FREELANCE/taskManagement/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TaskForm.css'\r\nfunction TaskForm({ addTask, updateTask, currentTask, setCurrentTask, isEditing, setIsEditing, setIsModalOpen }) {\r\n  const [task, setTask] = useState({ title: '', description: '' });\r\n\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      setTask(currentTask);\r\n    } else {\r\n      // setTask({ title: '', description: '' });\r\n    }\r\n  }, [isEditing, currentTask]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTask({ ...task, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!task.title.trim()) {\r\n      // Task title is empty, handle error (e.g., display an alert)\r\n      alert(\"Please enter a task title.\");\r\n      return; // Stop further execution\r\n    }\r\n\r\n    if (isEditing) {\r\n      updateTask(task);\r\n    } else {\r\n      addTask(task);\r\n    }\r\n    setTask({ title: '', description: '' });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className='taskForm'>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"Title\"\r\n        value={task.title}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <textarea\r\n        name=\"description\"\r\n        placeholder=\"Description\"\r\n        value={task.description}\r\n        onChange={handleChange}\r\n      ></textarea>\r\n      <button type=\"submit\">{isEditing ? 'Update Task' : 'Add Task'}</button>\r\n      {isEditing && <button onClick={() => { setIsEditing(false); setIsModalOpen(false) }}>Cancel</button>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,gBAAgB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACvB,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAgG,IAA/F,CAAEC,OAAO,CAAEC,UAAU,CAAEC,WAAW,CAAEC,cAAc,CAAEC,SAAS,CAAEC,YAAY,CAAEC,cAAe,CAAC,CAAAP,IAAA,CAC7G,KAAM,CAACQ,IAAI,CAAEC,OAAO,CAAC,CAAGhB,QAAQ,CAAC,CAAEiB,KAAK,CAAE,EAAE,CAAEC,WAAW,CAAE,EAAG,CAAC,CAAC,CAEhEjB,SAAS,CAAC,IAAM,CACd,GAAIW,SAAS,CAAE,CACbI,OAAO,CAACN,WAAW,CAAC,CACtB,CAAC,IAAM,CACL;AAAA,CAEJ,CAAC,CAAE,CAACE,SAAS,CAAEF,WAAW,CAAC,CAAC,CAE5B,KAAM,CAAAS,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCP,OAAO,CAAC,CAAE,GAAGD,IAAI,CAAE,CAACM,IAAI,EAAGC,KAAM,CAAC,CAAC,CACrC,CAAC,CAED,KAAM,CAAAE,YAAY,CAAIJ,CAAC,EAAK,CAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB,GAAI,CAACV,IAAI,CAACE,KAAK,CAACS,IAAI,CAAC,CAAC,CAAE,CACtB;AACAC,KAAK,CAAC,4BAA4B,CAAC,CACnC,OAAQ;AACV,CAEA,GAAIf,SAAS,CAAE,CACbH,UAAU,CAACM,IAAI,CAAC,CAClB,CAAC,IAAM,CACLP,OAAO,CAACO,IAAI,CAAC,CACf,CACAC,OAAO,CAAC,CAAEC,KAAK,CAAE,EAAE,CAAEC,WAAW,CAAE,EAAG,CAAC,CAAC,CACzC,CAAC,CACD,mBACEb,KAAA,SAAMuB,QAAQ,CAAEJ,YAAa,CAACK,SAAS,CAAC,UAAU,CAAAC,QAAA,eAChD3B,IAAA,UACE4B,IAAI,CAAC,MAAM,CACXV,IAAI,CAAC,OAAO,CACZW,WAAW,CAAC,OAAO,CACnBV,KAAK,CAAEP,IAAI,CAACE,KAAM,CAClBgB,QAAQ,CAAEd,YAAa,CACvBe,QAAQ,MACT,CAAC,cACF/B,IAAA,aACEkB,IAAI,CAAC,aAAa,CAClBW,WAAW,CAAC,aAAa,CACzBV,KAAK,CAAEP,IAAI,CAACG,WAAY,CACxBe,QAAQ,CAAEd,YAAa,CACd,CAAC,cACZhB,IAAA,WAAQ4B,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAElB,SAAS,CAAG,aAAa,CAAG,UAAU,CAAS,CAAC,CACtEA,SAAS,eAAIT,IAAA,WAAQgC,OAAO,CAAEA,CAAA,GAAM,CAAEtB,YAAY,CAAC,KAAK,CAAC,CAAEC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAE,CAAAgB,QAAA,CAAC,QAAM,CAAQ,CAAC,EAChG,CAAC,CAEX,CAEA,cAAe,CAAAxB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}