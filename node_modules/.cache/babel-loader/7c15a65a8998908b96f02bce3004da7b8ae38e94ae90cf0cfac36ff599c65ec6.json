{"ast":null,"code":"var _jsxFileName = \"D:\\\\SHEFALI_FREELANCE\\\\taskManagement\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Main from './components/Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleLogin = () => {\n    // Implement your login logic here\n    if (username === 'admin' && password === 'password') {\n      setIsLoggedIn(true);\n    } else {\n      alert('Invalid username or password');\n    }\n  };\n  const handleSignup = () => {\n    // Implement your signup logic here\n    // This is just a placeholder, you need to implement your actual signup logic\n    alert('Signup functionality not implemented yet');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7X2qaHaMGBDGWQUFTca5NuNu9SU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Main","jsxDEV","_jsxDEV","App","_s","username","setUsername","password","setPassword","isLoggedIn","setIsLoggedIn","handleLogin","alert","handleSignup","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SHEFALI_FREELANCE/taskManagement/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Main from './components/Main';\r\n\r\nconst App = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    // Implement your login logic here\r\n    if (username === 'admin' && password === 'password') {\r\n      setIsLoggedIn(true);\r\n    } else {\r\n      alert('Invalid username or password');\r\n    }\r\n  };\r\n\r\n  const handleSignup = () => {\r\n    // Implement your signup logic here\r\n    // This is just a placeholder, you need to implement your actual signup logic\r\n    alert('Signup functionality not implemented yet');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <Main />\r\n      ) : (\r\n        <div>\r\n           \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,IAAIN,QAAQ,KAAK,OAAO,IAAIE,QAAQ,KAAK,UAAU,EAAE;MACnDG,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLE,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACAD,KAAK,CAAC,0CAA0C,CAAC;EACnD,CAAC;EAED,oBACEV,OAAA;IAAAY,QAAA,EACGL,UAAU,gBACTP,OAAA,CAACF,IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAERhB,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CA/BID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}