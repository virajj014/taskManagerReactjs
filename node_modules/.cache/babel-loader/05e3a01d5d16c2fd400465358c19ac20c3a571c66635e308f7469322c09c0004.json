{"ast":null,"code":"// LoginSignup.js\nimport React,{useState}from'react';import'./LoginSignup.css';import logo from'../assets/TodoLogo.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginSignup=_ref=>{let{setIsLoggedIn}=_ref;const[isLoginSelected,setIsLoginSelected]=useState(true);const[username,setUsername]=useState('');const[password,setPassword]=useState('');const handleToggle=()=>{setIsLoginSelected(!isLoginSelected);};const handleInputChange=e=>{const{name,value}=e.target;if(name==='username'){setUsername(value);}else if(name==='password'){setPassword(value);}};const handleFormSubmit=e=>{e.preventDefault();if(isLoginSelected){const allUsers=JSON.parse(localStorage.getItem('allusers'))||[];const user=allUsers.find(user=>user.username===username&&user.password===password);if(user){alert('Login successful');localStorage.setItem('username',username);setIsLoggedIn(true);// Redirect or set logged in state\n}else{alert('Invalid username or password');}}else{// Signup logic\nconst allUsers=JSON.parse(localStorage.getItem('allusers'))||[];const userExists=allUsers.some(user=>user.username===username);if(userExists){alert('Username already exists. Please choose a different one.');}else{localStorage.setItem('allusers',JSON.stringify([...allUsers,{username:username,password:password}]));alert('Signup successful');// Redirect or set logged in state\n}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"authPage\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"logo\",alt:\"Todo Logo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"toggleButtons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleToggle,className:isLoginSelected?'active':'',children:\"Login\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleToggle,className:!isLoginSelected?'active':'',children:\"Signup\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFormSubmit,className:\"authform\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter username\",name:\"username\",value:username,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Enter Password\",name:\"password\",value:password,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:isLoginSelected?'Login':'Signup'})]})]});};export default LoginSignup;","map":{"version":3,"names":["React","useState","logo","jsx","_jsx","jsxs","_jsxs","LoginSignup","_ref","setIsLoggedIn","isLoginSelected","setIsLoginSelected","username","setUsername","password","setPassword","handleToggle","handleInputChange","e","name","value","target","handleFormSubmit","preventDefault","allUsers","JSON","parse","localStorage","getItem","user","find","alert","setItem","userExists","some","stringify","className","children","src","alt","onClick","onSubmit","type","placeholder","onChange"],"sources":["D:/SHEFALI_FREELANCE/taskManagement/src/components/LoginSignup.js"],"sourcesContent":["// LoginSignup.js\r\nimport React, { useState } from 'react';\r\nimport './LoginSignup.css';\r\nimport logo from '../assets/TodoLogo.png';\r\n\r\nconst LoginSignup = ({ setIsLoggedIn }) => {\r\n    const [isLoginSelected, setIsLoginSelected] = useState(true);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleToggle = () => {\r\n        setIsLoginSelected(!isLoginSelected);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'username') {\r\n            setUsername(value);\r\n        } else if (name === 'password') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (isLoginSelected) {\r\n\r\n            const allUsers = JSON.parse(localStorage.getItem('allusers')) || [];\r\n            const user = allUsers.find(user => user.username === username && user.password === password);\r\n            if (user) {\r\n                alert('Login successful');\r\n                localStorage.setItem('username',username)\r\n                setIsLoggedIn(true);\r\n                // Redirect or set logged in state\r\n            } else {\r\n                alert('Invalid username or password');\r\n            }\r\n\r\n\r\n        } else {\r\n            // Signup logic\r\n            const allUsers = JSON.parse(localStorage.getItem('allusers')) || [];\r\n            const userExists = allUsers.some(user => user.username === username);\r\n            if (userExists) {\r\n                alert('Username already exists. Please choose a different one.');\r\n            } else {\r\n\r\n                localStorage.setItem('allusers', JSON.stringify([...allUsers, { username: username, password: password }]));\r\n                alert('Signup successful');\r\n                // Redirect or set logged in state\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"authPage\">\r\n            <img src={logo} className=\"logo\" alt=\"Todo Logo\" />\r\n\r\n            <div className=\"toggleButtons\">\r\n                <button onClick={handleToggle} className={isLoginSelected ? 'active' : ''}>\r\n                    Login\r\n                </button>\r\n                <button onClick={handleToggle} className={!isLoginSelected ? 'active' : ''}>\r\n                    Signup\r\n                </button>\r\n            </div>\r\n\r\n\r\n            <form onSubmit={handleFormSubmit} className=\"authform\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter username\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button type=\"submit\">{isLoginSelected ? 'Login' : 'Signup'}</button>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginSignup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}